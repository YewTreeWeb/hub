{"version":3,"sources":["loadCSS.js"],"names":["w","loadCSS","href","before","media","doc","document","ss","createElement","ref","refs","body","getElementsByTagName","childNodes","length","sheets","styleSheets","rel","ready","cb","setTimeout","parentNode","insertBefore","nextSibling","onloadcssdefined","resolvedHref","i","loadCB","addEventListener","removeEventListener","exports","global"],"mappings":"AAAA;AACA,CAAC,UAAUA,CAAV,EAAa;AACb;AACA;;AAEA,KAAIC,UAAU,UAAUC,IAAV,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+B;AAC5C;AACA;AACA;AACA;AACA;AACA,MAAIC,MAAML,EAAEM,QAAZ;AACA,MAAIC,KAAKF,IAAIG,aAAJ,CAAkB,MAAlB,CAAT;AACA,MAAIC,GAAJ;AACA,MAAIN,MAAJ,EAAY;AACXM,SAAMN,MAAN;AACA,GAFD,MAEO;AACN,OAAIO,OAAO,CAACL,IAAIM,IAAJ,IAAYN,IAAIO,oBAAJ,CAAyB,MAAzB,EAAiC,CAAjC,CAAb,EAAkDC,UAA7D;AACAJ,SAAMC,KAAKA,KAAKI,MAAL,GAAc,CAAnB,CAAN;AACA;;AAED,MAAIC,SAASV,IAAIW,WAAjB;AACAT,KAAGU,GAAH,GAAS,YAAT;AACAV,KAAGL,IAAH,GAAUA,IAAV;AACA;AACAK,KAAGH,KAAH,GAAW,QAAX;;AAEA;AACA,WAASc,KAAT,CAAeC,EAAf,EAAmB;AAClB,OAAId,IAAIM,IAAR,EAAc;AACb,WAAOQ,IAAP;AACA;AACDC,cAAW,YAAY;AACtBF,UAAMC,EAAN;AACA,IAFD;AAGA;AACD;AACA;AACA;AACAD,QAAM,YAAY;AACjBT,OAAIY,UAAJ,CAAeC,YAAf,CAA4Bf,EAA5B,EAAgCJ,SAASM,GAAT,GAAeA,IAAIc,WAAnD;AACA,GAFD;AAGA;AACA,MAAIC,mBAAmB,UAAUL,EAAV,EAAc;AACpC,OAAIM,eAAelB,GAAGL,IAAtB;AACA,OAAIwB,IAAIX,OAAOD,MAAf;AACA,UAAOY,GAAP,EAAY;AACX,QAAIX,OAAOW,CAAP,EAAUxB,IAAV,KAAmBuB,YAAvB,EAAqC;AACpC,YAAON,IAAP;AACA;AACD;AACDC,cAAW,YAAY;AACtBI,qBAAiBL,EAAjB;AACA,IAFD;AAGA,GAXD;;AAaA,WAASQ,MAAT,GAAkB;AACjB,OAAIpB,GAAGqB,gBAAP,EAAyB;AACxBrB,OAAGsB,mBAAH,CAAuB,MAAvB,EAA+BF,MAA/B;AACA;AACDpB,MAAGH,KAAH,GAAWA,SAAS,KAApB;AACA;;AAED;AACA,MAAIG,GAAGqB,gBAAP,EAAyB;AACxBrB,MAAGqB,gBAAH,CAAoB,MAApB,EAA4BD,MAA5B;AACA;AACDpB,KAAGiB,gBAAH,GAAsBA,gBAAtB;AACAA,mBAAiBG,MAAjB;AACA,SAAOpB,EAAP;AACA,EAjED;AAkEA;AACA,KAAI,OAAOuB,OAAP,KAAmB,WAAvB,EAAoC;AACnCA,UAAQ7B,OAAR,GAAkBA,OAAlB;AACA,EAFD,MAEO;AACND,IAAEC,OAAF,GAAYA,OAAZ;AACA;AACD,CA5ED,EA4EG,OAAO8B,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyC,IA5E5C;AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../loadCSS.js","sourcesContent":["/*! loadCSS. [c]2017 Filament Group, Inc. MIT License */\n(function (w) {\n\t\"use strict\";\n\t/* exported loadCSS */\n\n\tvar loadCSS = function (href, before, media) {\n\t\t// Arguments explained:\n\t\t// `href` [REQUIRED] is the URL for your CSS file.\n\t\t// `before` [OPTIONAL] is the element the script should use as a reference for injecting our stylesheet <link> before\n\t\t// By default, loadCSS attempts to inject the link after the last stylesheet or script in the DOM. However, you might desire a more specific location in your document.\n\t\t// `media` [OPTIONAL] is the media type or query of the stylesheet. By default it will be 'all'\n\t\tvar doc = w.document;\n\t\tvar ss = doc.createElement(\"link\");\n\t\tvar ref;\n\t\tif (before) {\n\t\t\tref = before;\n\t\t} else {\n\t\t\tvar refs = (doc.body || doc.getElementsByTagName(\"head\")[0]).childNodes;\n\t\t\tref = refs[refs.length - 1];\n\t\t}\n\n\t\tvar sheets = doc.styleSheets;\n\t\tss.rel = \"stylesheet\";\n\t\tss.href = href;\n\t\t// temporarily set media to something inapplicable to ensure it'll fetch without blocking render\n\t\tss.media = \"only x\";\n\n\t\t// wait until body is defined before injecting link. This ensures a non-blocking load in IE11.\n\t\tfunction ready(cb) {\n\t\t\tif (doc.body) {\n\t\t\t\treturn cb();\n\t\t\t}\n\t\t\tsetTimeout(function () {\n\t\t\t\tready(cb);\n\t\t\t});\n\t\t}\n\t\t// Inject link\n\t\t// Note: the ternary preserves the existing behavior of \"before\" argument, but we could choose to change the argument to \"after\" in a later release and standardize on ref.nextSibling for all refs\n\t\t// Note: `insertBefore` is used instead of `appendChild`, for safety re: http://www.paulirish.com/2011/surefire-dom-element-insertion/\n\t\tready(function () {\n\t\t\tref.parentNode.insertBefore(ss, before ? ref : ref.nextSibling);\n\t\t});\n\t\t// A method (exposed on return object for external use) that mimics onload by polling document.styleSheets until it includes the new sheet.\n\t\tvar onloadcssdefined = function (cb) {\n\t\t\tvar resolvedHref = ss.href;\n\t\t\tvar i = sheets.length;\n\t\t\twhile (i--) {\n\t\t\t\tif (sheets[i].href === resolvedHref) {\n\t\t\t\t\treturn cb();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetTimeout(function () {\n\t\t\t\tonloadcssdefined(cb);\n\t\t\t});\n\t\t};\n\n\t\tfunction loadCB() {\n\t\t\tif (ss.addEventListener) {\n\t\t\t\tss.removeEventListener(\"load\", loadCB);\n\t\t\t}\n\t\t\tss.media = media || \"all\";\n\t\t}\n\n\t\t// once loaded, set link's media back to `all` so that the stylesheet applies once it loads\n\t\tif (ss.addEventListener) {\n\t\t\tss.addEventListener(\"load\", loadCB);\n\t\t}\n\t\tss.onloadcssdefined = onloadcssdefined;\n\t\tonloadcssdefined(loadCB);\n\t\treturn ss;\n\t};\n\t// commonjs\n\tif (typeof exports !== \"undefined\") {\n\t\texports.loadCSS = loadCSS;\n\t} else {\n\t\tw.loadCSS = loadCSS;\n\t}\n})(typeof global !== \"undefined\" ? global : this);\n//# sourceMappingURL=maps/loadCSS.js.map\n//# sourceMappingURL=maps/loadCSS.js.map\n//# sourceMappingURL=maps/loadCSS.js.map\n//# sourceMappingURL=maps/loadCSS.js.map\n//# sourceMappingURL=maps/loadCSS.js.map\n//# sourceMappingURL=maps/loadCSS.js.map\n//# sourceMappingURL=maps/loadCSS.js.map\n//# sourceMappingURL=maps/loadCSS.js.map\n"]}